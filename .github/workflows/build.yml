name: Make

on:
  push:
    branches: [ main ]
    
jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    
    - name: Install Chrome and ChromeDriver
      run: |
        # 安装 Chrome
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # 从 Chrome 版本中提取完整版本号
        CHROME_VERSION=$(google-chrome-stable --version | awk '{print $3}')
        echo "Chrome version: $CHROME_VERSION"
        
        # 从已知的 ChromeDriver 版本列表中选择匹配版本
        CD_VERSION=$(curl -sS "https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json" | 
                    jq -r --arg chrome_ver "$CHROME_VERSION" '.versions[] | select(.version | startswith($chrome_ver)) | .version')
        
        # 如果找不到完全匹配，使用最新版本
        if [ -z "$CD_VERSION" ]; then
          CD_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
        fi
        
        echo "Using ChromeDriver version: $CD_VERSION"
        
        # 下载 ChromeDriver
        wget "https://chromedriver.storage.googleapis.com/$CD_VERSION/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip
        sudo install chromedriver /usr/local/bin/
        chromedriver --version
    
    - name: Install dependencies
      run: |
        cd web
        npm install
        cd ..
        cd fantoccini
        cargo fetch
        cd ..
    
    - name: Start chromedriver
      run: |
        nohup chromedriver --port=4444 > chromedriver.log 2>&1 &
        echo $! > chromedriver.pid

    - name: Update git submodules
      run: |
        git submodule update --init --recursive
        git submodule foreach git pull origin main

    - name: Copy card directory
      run: |
        mkdir -p /web/src/static/
        cp -r ~/card /web/src/static/

    - name: Start frontend service
      run: |
        nohup npm run dev:h5 > frontend.log 2>&1 &
        echo $! > frontend.pid
        sleep 30  # 等待前端服务启动

    - name: Start backend service
      run: |
        nohup cargo run > backend.log 2>&1 &
        echo $! > backend.pid
        sleep 10  # 等待后端服务启动

    - name: Archive pictures
      run: |
        mkdir -p fantoccini/downloads  # 确保目录存在
        tar cf - fantoccini/downloads | zip -r pics.zip -
