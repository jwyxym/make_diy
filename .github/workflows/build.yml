name: Make Windows

on:
  push:
    branches: [ main ]
    
jobs:
  test:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    
    - name: Install Chrome and ChromeDriver
      run: |
        # 下载 Chrome for Testing
        Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-for-testing-public/138.0.7204.168/win64/chrome-win64.zip" -OutFile "chrome-win64.zip"
        Expand-Archive -Path "chrome-win64.zip" -DestinationPath .
        $chromePath = "$pwd\chrome-win64\chrome.exe"
        # 将 Chrome 添加到 PATH
        echo "$pwd\chrome-win64" | Out-File -FilePath $env:GITHUB_PATH -Append
        
        # 下载 ChromeDriver
        Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-for-testing-public/138.0.7204.168/win64/chromedriver-win64.zip" -OutFile "chromedriver-win64.zip"
        Expand-Archive -Path "chromedriver-win64.zip" -DestinationPath .
        echo "$pwd\chromedriver-win64" | Out-File -FilePath $env:GITHUB_PATH -Append
    
    - name: Install dependencies
      run: |
        cd web
        npm install
        cd ..
        cd fantoccini
        cargo fetch
        cd ..

    - name: Update git submodules
      run: |
        git submodule sync --recursive
        git submodule update --init --force --recursive
        git submodule foreach --recursive 'git reset --hard origin/main'
        git submodule foreach --recursive 'git clean -fd'

    - name: Copy card directory
      run: |
        xcopy /E /I /Y "card" "web\src\static"
        copy .\card\cards.cdb fantoccini

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Run
      run: |
        Start-Process -FilePath "chromedriver.exe" -ArgumentList "--port=9515" -NoNewWindow -RedirectStandardOutput "chromedriver.log" -PassThru | Select-Object -ExpandProperty Id | Out-File -FilePath "chromedriver.pid"
        $count = 0
        while (!(Test-NetConnection -ComputerName localhost -Port 9515).TcpTestSucceeded -and $count -lt 30) {
          Start-Sleep -Seconds 1
          $count++
        }

        cd web
        npm run build:h5
        cd dist\build\h5
        Start-Process -FilePath "python" -ArgumentList "-m http.server 5173" -NoNewWindow -RedirectStandardOutput "frontend.log" -PassThru | Select-Object -ExpandProperty Id | Out-File -FilePath "..\..\..\frontend.pid"
        $count = 0
        while (!(Test-NetConnection -ComputerName localhost -Port 5173).TcpTestSucceeded -and $count -lt 30) {
          Start-Sleep -Seconds 1
          $count++
        }
        if ($count -eq 30) { exit 1 }
        cd ..\..\..\..
        cd fantoccini
        cargo run

    - name: Cleanup processes
      if: always()
      run: |
        # 停止 chromedriver
        if (Test-Path "chromedriver.pid") {
          $chromedriverpid = Get-Content "chromedriver.pid"
          Stop-Process -Id $chromedriverpid -Force -ErrorAction SilentlyContinue
        }
        # 停止前端服务
        if (Test-Path "frontend.pid") {
          $frontendpid = Get-Content "frontend.pid"
          Stop-Process -Id $frontendpid -Force -ErrorAction SilentlyContinue
        }
        Get-Process -Name "chrome", "chromedriver" -ErrorAction SilentlyContinue | Stop-Process -Force

    - name: Upload pics.zip as artifact
      uses: actions/upload-artifact@v4
      with:
        name: pictures
        path: .\fantoccini\downloads\